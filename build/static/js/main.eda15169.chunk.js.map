{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","category","TodoList","todos","map","LOCAL_STORAGE_KEY","beforeSearch","App","useState","setTodos","todoRefs","useRef","useEffect","stored","JSON","parse","localStorage","getItem","setItem","stringify","class","className","onInput","searchedName","current","value","prevtodos","length","filter","slice","placeholder","ref","el","onClick","e","console","log","prevTodos","uuidv4","ntodos","newTodo","find","ReactDOM","render","document","getElementById"],"mappings":"wKAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAK7B,OACQ,8BACQ,kCACQ,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SAPvE,WACQJ,EAAWD,EAAKM,OAOCN,EAAKO,KAFd,IAEqBP,EAAKQ,cCRnC,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOT,EAAc,EAAdA,WAClC,OACQS,EAAMC,KAAI,SAAAX,GACF,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKM,O,oBCFzCM,EAAoB,gBACtBC,EAAe,GAoFJC,MAlFf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOL,EAAP,KAAcM,EAAd,KACMC,EAAWC,iBAAO,IA0DxB,OArDAC,qBAAU,WACR,IAAMC,EAASC,KAAKC,MAAMC,aAAaC,QAAQZ,IAC5CQ,GAAQJ,EAASI,KACnB,IAEHD,qBAAU,WACRI,aAAaE,QAAQb,EAAmBS,KAAKK,UAAUhB,MACtD,CAACA,IA+CF,qCACE,qDACA,qBAAKiB,MAAM,aAAX,SACE,uBAAOzB,KAAK,OAAO0B,UAAU,eAAeC,QAhDlD,WACE,IAAMC,EAAeb,EAASc,QAAT,WAA+BC,MACpD,GAAqB,KAAjBF,GAAwC,OAAjBA,EAAuB,CAChD,GAAGjB,IAAiB,GAAI,OAGxB,OAFAG,EAASH,QACTA,EAAe,IAGjB,IAAMoB,EAAS,YAAOvB,GACK,IAAxBG,EAAaqB,QACdrB,EAAeoB,EACfjB,EAASiB,EAAUE,QAAO,SAAAnC,GAAI,OAAIA,EAAKO,KAAK6B,MAAM,EAAGN,EAAaI,UAAYJ,OAG9Ed,EAASH,EAAasB,QAAO,SAAAnC,GAAI,OAAIA,EAAKO,KAAK6B,MAAM,EAAGN,EAAaI,UAAYJ,OAkCZvB,KAAK,iBAAiBD,GAAG,iBAAiB+B,YAAY,YAAYC,IAAK,SAAAC,GAAE,OAAItB,EAASc,QAAT,WAAiCQ,OAInL,sBAAKZ,MAAM,aAAX,UACE,uBAAOzB,KAAK,OAAO0B,UAAU,eAAerB,KAAK,WAAWD,GAAG,WAAU+B,YAAY,YAAYC,IAAK,SAAAC,GAAE,OAAItB,EAASc,QAAT,KAA2BQ,KAEvI,wBAAQC,QArCd,SAAuBC,GACrB,IAAMlC,EAAOU,EAASc,QAAT,KAAyBC,MAE1B,KAATzB,IAEHmC,QAAQC,IAAIpC,GACZS,GAAS,SAAA4B,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAACtC,GAAIuC,MAAUtC,KAAMA,EAAMH,UAAU,QAE3Da,EAASc,QAAT,KAAyBC,MAAQ,OA4B/B,wBACA,wBAAQQ,QAzBd,WACE,IACMM,EADQ,YAAOpC,GACGyB,QAAO,SAAAnC,GAAI,OAAIA,EAAKI,YAC5CY,EAAS8B,IAsBL,iCAGF,cAACrC,EAAD,CAAUC,MAAOA,EAAOT,WAtB5B,SAAoBK,GAClB,IAAMyC,EAAO,YAAOrC,GACdV,EAAO+C,EAAQC,MAAK,SAAAhD,GAAI,OAAIA,EAAKM,KAAOA,KAC9CN,EAAKI,UAAYJ,EAAKI,SACtBY,EAAS+B,MAmBP,8CAAiBrC,EAAMyB,QAAO,SAAAnC,GAAI,OAAGA,EAAKI,YAAU8B,cC9E1De,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.eda15169.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo( {todo, toggleTodo} ) {\r\n        function handleTodoClick(){\r\n                toggleTodo(todo.id)\r\n        }\r\n\r\n        return (\r\n                <div>\r\n                        <label>\r\n                                <input type='checkbox' checked={todo.complete} onChange={handleTodoClick}/>\r\n                                {todo.name} {todo.category}\r\n                        </label>\r\n                </div>\r\n        )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({ todos, toggleTodo }) {\r\n        return (\r\n                todos.map(todo => {\r\n                        return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo} />\r\n                })\r\n        )\r\n}\r\n// category {\r\n//      todo {\r\n//              id, name, completed, category\r\n//      }       \r\n// }","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList'\nimport uuidv4 from 'uuid/dist/v4'\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\nlet beforeSearch = []\n\nfunction App() {\n\n  const [todos, setTodos] = useState([])\n  const todoRefs = useRef([]);\n  \n\n  \n\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(stored) setTodos(stored)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function handleSearch(){\n    const searchedName = todoRefs.current['nameSearch'].value\n    if (searchedName === '' || searchedName === null) {\n      if(beforeSearch === []) return\n      setTodos(beforeSearch)\n      beforeSearch = []\n      return\n    }\n    const prevtodos = [...todos]\n    if(beforeSearch.length === 0) {\n      beforeSearch = prevtodos\n      setTodos(prevtodos.filter(todo => todo.name.slice(0, searchedName.length) === searchedName))\n    }\n    else{\n      setTodos(beforeSearch.filter(todo => todo.name.slice(0, searchedName.length) === searchedName))\n    }\n  }\n\n  function handleAddTodo(e){\n    const name = todoRefs.current['name'].value\n    // let category = todoRefs.current['category'].value\n    if(name === '') return \n    // if(category === '') category = 'default' \n    console.log(name)\n    setTodos(prevTodos=>{\n      return [...prevTodos, {id: uuidv4(), name: name, complete: false} //, category: category}\n      ]})\n      todoRefs.current['name'].value = null\n      // todoRefs.current['category'].value = null\n  }\n\n  function handleClearTodo(){\n    const newTodos = [...todos]\n    const ntodos = newTodos.filter(todo=> !todo.complete)\n    setTodos(ntodos)\n  }\n\n  function toggleTodo(id){\n    const newTodo = [...todos]\n    const todo = newTodo.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodo)\n  }\n\n  return (\n    <>\n      <header> Todo List App </header>\n      <div class=\"form-group\">\n        <input type=\"text\" className=\"form-control\" onInput={handleSearch} name=\"TaskNameSearch\" id=\"taskNameSearch\" placeholder='search.. ' ref={el => todoRefs.current['nameSearch'] = el}/>\n        {/* <input type=\"text\" class=\"form-control\" name=\"TaskCategory\" id=\"taskCategory\"placeholder='task category' ref={el => todoRefs.current['category'] = el}/> */}\n        \n      </div>\n      <div class=\"form-group\">\n        <input type=\"text\" className=\"form-control\" name=\"TaskName\" id=\"taskName\"placeholder='task name' ref={el => todoRefs.current['name'] = el}/>\n        {/* <input type=\"text\" class=\"form-control\" name=\"TaskCategory\" id=\"taskCategory\"placeholder='task category' ref={el => todoRefs.current['category'] = el}/> */}\n        <button onClick={handleAddTodo}> Add Task </button>\n        <button onClick={handleClearTodo}>Clear Completed </button>\n        \n      </div>\n      <TodoList todos={todos} toggleTodo={toggleTodo}/>\n      <p> Todos left: {todos.filter(todo=>!todo.complete).length}</p>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}